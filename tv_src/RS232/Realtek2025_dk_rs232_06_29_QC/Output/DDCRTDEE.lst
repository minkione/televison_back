C51 COMPILER V8.16   DDCRTDEE                                                              04/05/2012 11:15:32 PAGE 1   


C51 COMPILER V8.16, COMPILATION OF MODULE DDCRTDEE
OBJECT MODULE PLACED IN .\Output\DDCRTDEE.obj
COMPILER INVOKED BY: D:\安装文件\keil\C51\BIN\C51.EXE DDC\DDCRTDEE.c OPTIMIZE(9,SIZE) BROWSE DEFINE(CMOS_CHIP_TYPE=PCB_2
                    -025LV13) PRINT(.\Output\DDCRTDEE.lst) OBJECT(.\Output\DDCRTDEE.obj)

line level    source

   1          #include "Header\Include.h"
   2          
   3          
   4          #if(_DDC_TYPE == _DCC_RTD_EEPROM)
              //--------------------------------------------------------
              void RTDDDCProc(void)
              {
                   #if(_VGA_SUPPORT)
                   RTDDDCProc1(_EDID0_ADDRESS,_DDC_ENABLE_FA);
                   #endif
              
                   #if(_TMDS_SUPPORT)
                   RTDDDCProc1(_EDID1_ADDRESS,_DDC_DVI_ENABLE_FD);
                   #endif
              }
              
              //--------------------------------------------------------
              void RTDDDCProc1(BYTE ucEEPRamAddr,BYTE ucRTDAddr)
              {
                   CScalerRead(ucRTDAddr, 1, pData, _NON_AUTOINC);
                   if(pData[0] & 0x10)
                   {          
                        CTimerDelayXms(250);
                        CTimerDelayXms(250);
                        CTimerDelayXms(250);
                        CTimerDelayXms(250);
                        CTimerDelayXms(250);
              
                        SaveRTDDDCToEE(ucEEPRamAddr,ucRTDAddr);
                        CScalerSetByte(ucRTDAddr, 0x0d);    // Enable  DDC
                   }
              }
              
              //--------------------------------------------------------
              void LoadEEDDCToRTD(BYTE ucEEPRamAddr,BYTE ucRTDAddr)
              {
                   BYTE i;
              
                   CScalerSetByte(ucRTDAddr, 0x00);    // Disable  DDC
                   CScalerSetByte(ucRTDAddr + 1, 0x00);     // Set DDC Index
              
                   // Write 128 Byte DDC Infomation
                   for(i=0;i<8;i++)
                   {
                        CEepromRead(ucEEPRamAddr + (i * 16), 16 , pData);
                        CScalerWrite(ucRTDAddr + 2, 16, pData, _NON_AUTOINC);
                   }
                   CScalerSetByte(ucRTDAddr, 0x0d);    // Enable  DDC
              
              }
              
              //--------------------------------------------------------
              void SaveRTDDDCToEE(BYTE ucEEPRamAddr,BYTE ucRTDAddr)
              {
C51 COMPILER V8.16   DDCRTDEE                                                              04/05/2012 11:15:32 PAGE 2   

                   BYTE i;
              
                   CScalerSetByte(ucRTDAddr, 0x00);         // Disable  DDC
                   CScalerSetByte(ucRTDAddr + 1, 0x00);     // Set DDC Index
              
                   // Write 128 Byte DDC Infomation
                   for(i=0;i<8;i++)
                   {
                        CScalerRead(ucRTDAddr + 2, 16, pData, _NON_AUTOINC);
                        CEepromWrite(ucEEPRamAddr + (i * 16), 16, pData);
                   }
                   CScalerSetByte(ucRTDAddr, 0x0d);          // Enable  DDC
              }
              //--------------------------------------------------------
              #endif    //#if(DDC_TYPE == DDC_RTD_CODE)


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   ----    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
