C51 COMPILER V8.16   GMI_VALUEINRANGECHANGE                                                04/05/2012 11:15:37 PAGE 1   


C51 COMPILER V8.16, COMPILATION OF MODULE GMI_VALUEINRANGECHANGE
OBJECT MODULE PLACED IN .\Output\gmi_ValueInRangeChange.obj
COMPILER INVOKED BY: D:\安装文件\keil\C51\BIN\C51.EXE Lib\gmi_ValueInRangeChange.c OPTIMIZE(9,SIZE) BROWSE DEFINE(CMOS_C
                    -HIP_TYPE=PCB_2025LV13) PRINT(.\Output\gmi_ValueInRangeChange.lst) OBJECT(.\Output\gmi_ValueInRangeChange.obj)

line level    source

   1          ////////////////////////////////////////////////////////////////////////////
   2          //         Copyright of Vector Co.,Ltd.                                   //
   3          //                                                                        //
   4          //                                                                        //
   5          //                     ValueInRangeChange function                        //
   6          //   Ver: 0.00                                                            //
   7          //   Creat file time: 2006.7.31                                           //
   8          //   End modify time: 2006.7.31                                           //
   9          //   For RTD2523B/RTD2553V/RTD2525L                                       //
  10          ////////////////////////////////////////////////////////////////////////////
  11          
  12          #include "Header\Include.h"
  13          
  14          
  15          
  16          //-------------------------------------------------------------
  17          WORD ValueInRangeChange(WORD ucMin, WORD ucMax, WORD ucCur, BYTE ucOption, BYTE ucLoop)
  18          {
  19   1          WORD R;
  20   1      
  21   1          if(ucOption)
  22   1          {
  23   2              if(ucCur >= ucMax)
  24   2              {
  25   3                  if(ucLoop == 0)    return ucMax;
  26   3                  else               return ucMin;
  27   3              }
  28   2              R = ucCur+1;
  29   2          }
  30   1          else
  31   1          {
  32   2              if(ucCur <= ucMin)
  33   2              {
  34   3                  if(ucLoop == 0)    return ucMin;
  35   3                  else               return ucMax;
  36   3              }
  37   2              R = ucCur-1;
  38   2          }
  39   1          return R;
  40   1      }
  41          
  42          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     63    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
